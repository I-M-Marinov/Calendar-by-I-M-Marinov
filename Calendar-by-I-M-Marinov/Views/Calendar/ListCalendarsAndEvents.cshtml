@using Calendar_by_I_M_Marinov.Common
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Calendar_by_I_M_Marinov.Models.CalendarEventsViewModel

<h2>Select a Calendar</h2>

<form method="get" asp-action="ListCalendarsAndEvents">
    <div class="form-group">
        <select id="calendarSelect" name="selectedCalendarId" class="form-control">
            <option value="all">All Calendars</option>

            @foreach (var calendar in Model.Calendars)
            {
                var isSelected = calendar.CalendarId == Model.SelectedCalendarId;
                <option value="@calendar.CalendarId" selected="@(isSelected ? "selected" : "")">
                    @calendar.CalendarName
                </option>
            }
        </select>
    </div>
    <br />
    <button type="submit" class="btn btn-primary-load-events">Load Events</button>
    <br />
</form>

@if (!string.IsNullOrEmpty(Model.SelectedCalendarName))
{
	<h2>Events for @Model.SelectedCalendarName</h2>
}

@if (Model.Events != null && Model.Events.Any())
{
    <ul class="list-unstyled">
        <br />
        <h4>The Calendar "@Model.SelectedCalendarName" has @Model.Events.Count events/entries. </h4>
        <br />
        @foreach (var evt in Model.Events)
        {
            // Determine if the event is an all-day event
            bool isAllDayEvent = !string.IsNullOrEmpty(evt.Start?.Date) && evt.Start?.DateTime == null;
            bool isOwnedEvent = Model.SelectedCalendarId == "all"
            ? Model.EventCalendarMap.TryGetValue(evt.Id, out var calendarId) && Model.Calendars.FirstOrDefault(c => c.CalendarId == calendarId)?.AccessRole == "owner"
            : Model.Calendars.FirstOrDefault(c => c.CalendarId == Model.SelectedCalendarId)?.AccessRole == "owner";

            @if (ViewBag.SuccessMessage != null && ViewBag.SuccessEventId != null && ViewBag.SuccessEventId.ToString() == evt.Id)
            {
                <div class="alert alert-success" style="text-align:center">
                    @ViewBag.SuccessMessage
                </div>
            }

            <li class="event-item">
	            <div class="event-info">

					@if (!string.IsNullOrEmpty(evt.Start?.Date) && !string.IsNullOrEmpty(evt.End?.Date)) // if it is an all day event add the icon
		            {
			            <img class="allDay-icon" src="/Icons/all-day.png" alt="allDay-icon">
		            }
		            <strong>@evt.Summary</strong><br/>

		            @if (!string.IsNullOrEmpty(evt.Start?.Date))
		            {
			            <span><span style="color: green;font-weight:500;">Start:</span> @DateTime.Parse(evt.Start.Date).ToLocalTime().ToString("MMMM dd, yyyy")</span>
			            <br/>
			            <span><span style="color: red; font-weight:500;">End:</span> @DateTime.Parse(evt.End?.Date).ToLocalTime().ToString("MMMM dd, yyyy")</span>
			            <br/>
		            }
		            else if (evt.Start?.DateTimeDateTimeOffset != null && evt.End?.DateTimeDateTimeOffset != null)
		            {
			            <span><span style="color: green;font-weight:500;">Start:</span> @evt.Start.DateTimeDateTimeOffset.Value.ConvertToLocalTime("Europe/Sofia").ToString("MMMM dd, yyyy h:mm tt")</span>
			            <br/>
			            <span><span style="color: red; font-weight:500;">End:</span> @evt.End.DateTimeDateTimeOffset.Value.ConvertToLocalTime("Europe/Sofia").ToString("MMMM dd, yyyy h:mm tt")</span>
			            <br/>
		            }
		            else if (!string.IsNullOrEmpty(evt.Start?.Date) && !string.IsNullOrEmpty(evt.End?.Date))
		            {
			            <!-- All-Day Event -->
			            <br/>
			            <p><span style="color: royalblue; font-weight:500;">Date: @DateTime.Parse(evt.Start.Date).ToString("ddd dd MMM yyyy")</span></p>
		            }

		            @if (!string.IsNullOrEmpty(evt.Location))
		            {
			            <span>Location: @evt.Location</span>
		            }

		            <!-- Display Attendees -->

		            @if (evt.Attendees != null && evt.Attendees.Any())
		            {
			            <br/>
			            <h6 style="margin-top: 0.5em;">Attendees:</h6>
			            <ul>
				            @foreach (var attendee in evt.Attendees)
				            {
					            <li style="list-style-type: square">
						            <!-- Determine color based on response status -->
						            @{
							            string color = "black"; // Default color
							            if (attendee.ResponseStatus == "accepted")
							            {
								            color = "green";
							            }
							            else if (attendee.ResponseStatus == "declined")
							            {
								            color = "darkred";
							            }
							            else if (attendee.ResponseStatus == "tentative")
							            {
								            color = "orange";
							            }
							            else if (attendee.ResponseStatus == "needsAction")
							            {
								            color = "blue";
							            }
						            }

						            <!-- Show display name or email with color -->
						            <span style="color:@color; font-weight: 600;">
							            @if (attendee.DisplayName == null)
							            {
								            @attendee.Email
							            }
							            else
							            {
								            @attendee.DisplayName
							            }

							            <!-- Show response status -->
							            @if (attendee.ResponseStatus == "accepted")
							            {
								            @("(Accepted)")
							            }
							            else if (attendee.ResponseStatus == "declined")
							            {
								            @("(Declined)")
							            }
							            else if (attendee.ResponseStatus == "tentative")
							            {
								            @("(Maybe)")
							            }
							            else if (attendee.ResponseStatus == "needsAction")
							            {
								            @("(Pending)")
							            }
						            </span>
					            </li>
				            }
			            </ul>
		            }

	            </div>
                <br />
                
                

                <br />


                @if (isOwnedEvent)
                {
	                <div class="event-actions">
		                <!-- Edit Button -->
		                <a asp-action="EditEvent" 
		                   asp-route-calendarId="@(Model.SelectedCalendarId == "all" ? Model.EventCalendarMap[evt.Id] : Model.SelectedCalendarId)" 
		                   asp-route-eventId="@evt.Id" 
		                   class="btn btn-warning btn-sm">Edit</a>

		                <!-- Delete Button -->
		                <form asp-action="ConfirmDelete" method="get" style="display:inline;">
			                @if (Model.SelectedCalendarId == "all")
			                {
				                <input type="hidden" name="calendarId" value="@(Model.EventCalendarMap.TryGetValue(evt.Id, out var calendarId) ? calendarId : Model.SelectedCalendarId)" />
			                }
			                else
			                {
				                <input type="hidden" name="calendarId" value="@Model.SelectedCalendarId" />
			                }
			                <input type="hidden" name="eventId" value="@evt.Id" />
			                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
		                </form>

	                </div>
                }

                @if (!isAllDayEvent)
                {
                    <!-- Duplicate Button -->
                    <form asp-action="DuplicateEvent" method="post">
                        <input type="hidden" name="eventId" value="@evt.Id" />
                        <input type="hidden" name="calendarId" value="@(Model.SelectedCalendarId == "all" ? (Model.EventCalendarMap.TryGetValue(evt.Id, out var calendarId) ? calendarId : Model.SelectedCalendarId) : Model.SelectedCalendarId)" />
                        <button type="submit" class="btn btn-duplicate-event">Duplicate Event</button>
                    </form>
                }
            </li>
        }
    </ul>
}
else if (Model.SelectedCalendarId != null)
{
    <p>No events found for the selected calendar.</p>
}
