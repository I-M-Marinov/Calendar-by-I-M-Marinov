@using Calendar_by_I_M_Marinov.Common
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Calendar_by_I_M_Marinov.Models.CalendarEventsViewModel

<h2>Select a Calendar</h2>

<form method="get" asp-action="ListCalendarsAndEvents">
    <div class="form-group">
        <label for="calendarSelect">Select Calendar:</label>
        <select id="calendarSelect" name="selectedCalendarId" class="form-control">
            <option value="default">-- Select Calendar --</option>
            <option value="all">All Calendars</option>

            @foreach (var calendar in Model.Calendars)
            {
                var isSelected = calendar.CalendarId == Model.SelectedCalendarId;
                <option value="@calendar.CalendarId" selected="@(isSelected ? "selected" : "")">
                    @calendar.CalendarName
                </option>
            }
        </select>
    </div>
    <br />
    <button type="submit" class="btn btn-primary-load-events">Load Events</button>
    <br />
</form>

<h2>Events for @Model.SelectedCalendarName</h2>

@if (Model.Events != null && Model.Events.Any())
{
    <ul class="list-unstyled">
        <br />
        <h4>The Calendar "@Model.SelectedCalendarName" has @Model.Events.Count events/entries. </h4>
        <br />
        @foreach (var evt in Model.Events)
        {
            // Determine if the event is an all-day event
            bool isAllDayEvent = !string.IsNullOrEmpty(evt.Start?.Date) && evt.Start?.DateTime == null;
            bool isOwnedEvent = Model.SelectedCalendarId == "all"
            ? Model.EventCalendarMap.TryGetValue(evt.Id, out var calendarId) && Model.Calendars.FirstOrDefault(c => c.CalendarId == calendarId)?.AccessRole == "owner"
            : Model.Calendars.FirstOrDefault(c => c.CalendarId == Model.SelectedCalendarId)?.AccessRole == "owner";

            @if (ViewBag.SuccessMessage != null && ViewBag.SuccessEventId != null && ViewBag.SuccessEventId.ToString() == evt.Id)
            {
                <div class="alert alert-success" style="text-align:center">
                    @ViewBag.SuccessMessage
                </div>
            }

            <li class="event-item">
                <div class="event-info">
                    <strong>@evt.Summary</strong><br />

                    @if (!string.IsNullOrEmpty(evt.Start?.Date))
                    {
                        <span>Start: @DateTime.Parse(evt.Start.Date).ToLocalTime().ToString("MMMM dd, yyyy")</span>
                        <br />
                        <span>End: @DateTime.Parse(evt.End?.Date).ToLocalTime().ToString("MMMM dd, yyyy")</span>
                        <br />
                    }
                    else if (evt.Start?.DateTimeDateTimeOffset != null && evt.End?.DateTimeDateTimeOffset != null)
                    {
                        <span>Start: @evt.Start.DateTimeDateTimeOffset.Value.ConvertToLocalTime("Europe/Sofia").ToString("MMMM dd, yyyy h:mm tt")</span>
                        <br />
                        <span>End: @evt.End.DateTimeDateTimeOffset.Value.ConvertToLocalTime("Europe/Sofia").ToString("MMMM dd, yyyy h:mm tt")</span>
                        <br />
                    }
                    else
                    {
                        <span>Start: Not Available</span>
                        <br />
                        <span>End: Not Available</span>
                        <br />
                    }

                    @if (!string.IsNullOrEmpty(evt.Location))
                    {
                        <span>Location: @evt.Location</span>
                    }
                </div>
                <br />

                @if (isOwnedEvent)
                {
	                <div class="event-actions">
		                <!-- Edit Button -->
		                <a asp-action="EditEvent" 
		                   asp-route-calendarId="@(Model.SelectedCalendarId == "all" ? Model.EventCalendarMap[evt.Id] : Model.SelectedCalendarId)" 
		                   asp-route-eventId="@evt.Id" 
		                   class="btn btn-warning btn-sm">Edit</a>

		                <!-- Delete Button -->
		                <form asp-action="ConfirmDelete" method="get" style="display:inline;">
			                @if (Model.SelectedCalendarId == "all")
			                {
				                <input type="hidden" name="calendarId" value="@(Model.EventCalendarMap.TryGetValue(evt.Id, out var calendarId) ? calendarId : Model.SelectedCalendarId)" />
			                }
			                else
			                {
				                <input type="hidden" name="calendarId" value="@Model.SelectedCalendarId" />
			                }
			                <input type="hidden" name="eventId" value="@evt.Id" />
			                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
		                </form>

	                </div>
                }

                @if (!isAllDayEvent)
                {
                    <!-- Duplicate Button -->
                    <form asp-action="DuplicateEvent" method="post">
                        <input type="hidden" name="eventId" value="@evt.Id" />
                        <input type="hidden" name="calendarId" value="@(Model.SelectedCalendarId == "all" ? (Model.EventCalendarMap.TryGetValue(evt.Id, out var calendarId) ? calendarId : Model.SelectedCalendarId) : Model.SelectedCalendarId)" />
                        <button type="submit" class="btn btn-duplicate-event">Duplicate Event</button>
                    </form>
                }
            </li>
        }
    </ul>
}
else if (Model.SelectedCalendarId != null)
{
    <p>No events found for the selected calendar.</p>
}
