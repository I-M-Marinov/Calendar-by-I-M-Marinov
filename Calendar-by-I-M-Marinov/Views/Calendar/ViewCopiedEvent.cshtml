@using Calendar_by_I_M_Marinov.Common
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Google.Apis.Calendar.v3.Data.Event


@{
	var successMessage = ViewBag.SuccessMessage as string;
	var errorMessage = ViewBag.ErrorMessage as string;
	var copiedEventSummary = ViewBag.CopiedEventSummary as string;
	var destinationCalendarSummary = ViewBag.DestinationCalendarSummary as string;
	var destinationCalendarId = ViewBag.DestinationCalendarId;
}


<h2 style="color: green; font-weight:500;">Event copied successfully!</h2>



<!-- Success message -->
@if (!string.IsNullOrEmpty(successMessage))
{
	<div class="alert alert-success">
		@successMessage
	</div>
}

<!-- Error message -->
@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">
		@errorMessage
	</div>
}


@if (Model != null)
{
	<ul class="event-details" style="list-style-type: none; text-align:center;">
		<li>
			<br />
			@if (!string.IsNullOrEmpty(Model.Start?.Date) && !string.IsNullOrEmpty(Model.End?.Date)) // if it is an all day event add the icon
			{
				<img class="allDay-icon" src="/Icons/all-day.png" alt="allDay-icon">
			}
			<strong>@Model.Summary</strong>
			<br />

			<!-- Display Start and End times -->
			@if (!string.IsNullOrEmpty(Model.Start?.Date) && !string.IsNullOrEmpty(Model.End?.Date))
			{
				<!-- All-Day Event -->
				<br />
				<p><span style="color: royalblue; font-weight:500;">Date: @DateTime.Parse(Model.Start.Date).ToString("ddd dd MMM yyyy")</span></p>

			}
			else if (Model.Start?.DateTimeDateTimeOffset != null && Model.End?.DateTimeDateTimeOffset != null)
			{
				<span><span style="color: green;font-weight:500;">Start:</span> @Model.Start.DateTimeDateTimeOffset.Value.ConvertToLocalTime("Europe/Sofia").ToString("MMMM dd, yyyy h:mm tt")</span>
				<br />
				<span><span style="color: red; font-weight:500;">End:</span> @Model.End.DateTimeDateTimeOffset.Value.ConvertToLocalTime("Europe/Sofia").ToString("MMMM dd, yyyy h:mm tt")</span>
				<br />
			}


			<!-- Display Location -->
			@if (!string.IsNullOrEmpty(Model.Location))
			{
				<p>Location: @Model.Location</p>
			}

			<!-- Display Description -->
			@if (!string.IsNullOrEmpty(Model.Description))
			{
				<p>Description: @Model.Description</p>
			}

			<!-- Display Visibility -->
			<p>Visibility: @(string.IsNullOrEmpty(Model.Visibility) ? "Unspecified" : Model.Visibility)</p>


			<!-- Display Attendees -->
			@if (Model.Attendees != null && Model.Attendees.Count > 0)
			{

				<ul>
					@if (Model.Attendees != null && Model.Attendees.Any())
					{
						<br />
						<h6>Attendees:</h6>
						<ul>
							@foreach (var attendee in Model.Attendees)
							{
								<li style="list-style-type: none; text-align: center;">
									<!-- Determine color based on response status -->
									@{
										string color = "black"; // Default color
										if (attendee.ResponseStatus == "accepted")
										{
											color = "green";
										}
										else if (attendee.ResponseStatus == "declined")
										{
											color = "darkred";
										}
										else if (attendee.ResponseStatus == "tentative")
										{
											color = "orange";
										}
										else if (attendee.ResponseStatus == "needsAction")
										{
											color = "blue";
										}
									}

									<!-- Show display name or email with color -->

									<span style="color:@color; font-weight: 600;">
										@if (attendee.DisplayName == null)
										{
											@attendee.Email
										}
										else
										{
											@attendee.DisplayName
										}

										<!-- Show response status -->
										@if (attendee.ResponseStatus == "accepted")
										{
											@("(Accepted)")
										}
										else if (attendee.ResponseStatus == "declined")
										{
											@("(Declined)")
										}
										else if (attendee.ResponseStatus == "tentative")
										{
											@("(Maybe)")
										}
										else if (attendee.ResponseStatus == "needsAction")
										{
											@("(Pending)")
										}
									</span>
								</li>
							}
						</ul>
					}
				</ul>
			}


			<!-- Display Recurrence (if any) -->
			@if (Model.Recurrence != null && Model.Recurrence.Any())
			{
				<img class="annual-icon" src="/Icons/annual-icon.PNG" alt="annual-icon">

				<p style="color: purple;font-weight:500;">Annual Event</p>
			}

			<a asp-action="GotoCalendar" asp-route-calendarId="@destinationCalendarId" class="btn btn-primary btn-sm">
				See all events for @destinationCalendarSummary
			</a>
			<button class="btn btn-primary btn-sm" onclick="window.history.back();">Back</button>

		</li>
	</ul>
}
else
{
	<p>No event details found.</p>
}

<style>

	.event-details {
		display: flex;
		flex-direction: column;
		border-bottom: 1px solid royalblue;
		width: 500px;
	}

	.event-details ul li {
		margin-bottom: 2em;
		margin-left: -2em;
	}

</style>