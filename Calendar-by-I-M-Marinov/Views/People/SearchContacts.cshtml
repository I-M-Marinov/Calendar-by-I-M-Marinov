@model List<Calendar_by_I_M_Marinov.Models.People.ContactViewModel>


@{
    ViewBag.Title = "Search Contacts";

    int currentPage = (int)(ViewBag.CurrentPage ?? 1);
    int totalPages = (int)(ViewBag.TotalPages ?? 1);

    const int pagesToShow = 20;

    int startPage = Math.Max(1, currentPage - pagesToShow / 2);
    int endPage = Math.Min(totalPages, startPage + pagesToShow - 1);

    if (endPage - startPage < pagesToShow - 1)
    {
	    startPage = Math.Max(1, endPage - pagesToShow + 1);

    }

    int previousPage = Math.Max(currentPage - 1, 1);
    int nextPage = Math.Min(currentPage + 1, totalPages);
}



<div class="search-container">
	<h2>Search Contacts</h2>

	<!-- Success and Error Messages -->
    
	@if (TempData["ErrorMessage"] != null)
	{
		<div class="alert alert-danger search-contacts" id="error-message" role="alert">
			@TempData["ErrorMessage"]
		</div>
	}
	
		
	@if (TempData["Message"] != null)
	{
		<div class="alert alert-success get-all-contacts" id="success-message" role="alert">
			<strong>@TempData["Message"]</strong></div>
	}

	<!-- Search Form -->
	<div id="search-contacts">
		<form method="post" asp-action="SearchContacts">
			<div class="hover-target">
				<div class="form-group">
					<input style="width:500px;" type="text" class="form-control" id="contactSearch" name="text" placeholder="Search for a contact..." required>
				</div>
				<div class="form-group-search">
					<button type="submit" class="btn btn-primary search-contacts" id="search-contacts-btn">Search</button>
				</div>
			</div>
		</form>
	</div>
	
	@if (Model != null && Model.Any())
	{
		bool showFirstName = Model.Any(c => !string.IsNullOrEmpty(c.FirstName));
		bool showLastName = Model.Any(c => !string.IsNullOrEmpty(c.LastName));
		bool showEmail = Model.Any(c => !string.IsNullOrEmpty(c.Email));
		bool showPhoneNumber = Model.Any(c => !string.IsNullOrEmpty(c.PhoneNumber));
		bool showBirthday = Model.Any(c => !string.IsNullOrEmpty(c.Birthday));
		bool showLabels = Model.Any(c => c.Labels != null && c.Labels.Any());
		bool birthdayIsAvailable = Model.Any(c => c.Birthday != "N/A");
		bool emailIsAvailable = Model.Any(c => c.Email != "N/A");

		<!-- Display found contacts -->
		<div class="mt-3">
			<div class="contacts-count">
				<h4 style="background-color:#007bff; color: white; font-size: 15px; width: 10.5em; padding: 0.5em; text-align:center; ">Contacts found: @ViewBag.TotalContacts</h4>
			</div>
			

			<nav aria-label="Page navigation">
				<ul class="pagination justify-content-center">
					<!-- Back Button -->
					<li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
						<form method="post" asp-action="SearchContacts" style="display:inline;">
							<input type="hidden" name="text" value="@TempData["SearchTerm"]"/>
							<input type="hidden" name="pageNumber" value="@previousPage" />
							<button type="submit" class="page-link" @(ViewBag.CurrentPage == 1 ? "disabled" : "")>&laquo; Previous</button>
						</form>
					</li>

					@for (int i = startPage; i <= endPage; i++)
					{
						<li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
							<form method="post" asp-action="SearchContacts" style="display:inline;">
								<input type="hidden" name="text" value="@TempData["SearchTerm"]"/>
								<input type="hidden" name="pageNumber" value="@i" />
								<button type="submit" class="page-link">@i</button>
							</form>
						</li>
					}

					<!-- Next Button -->
					<li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
						<form method="post" asp-action="SearchContacts" style="display:inline;">
							<input type="hidden" name="text" value="@TempData["SearchTerm"]"/>
							<input type="hidden" name="pageNumber" value="@nextPage" />
							<button type="submit" class="page-link" @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")>Next &raquo;</button>
						</form>
					</li>
				</ul>
			</nav>

			<table class="table table-bordered">
				<thead>
				<tr>

					@if (showFirstName && showLastName)
					{
						<th>Name</th>
					}
					else if (showFirstName)
					{
						<th>First Name</th>
					}
					else if (showLastName)
					{
						<th>Last Name</th>
					}

					@if (showEmail && emailIsAvailable)
					{
						<th>Email</th>
					}
					@if (showPhoneNumber)
					{
						<th>Phone Number</th>
					}
					@if (showBirthday && birthdayIsAvailable)
					{
						<th>Birthday</th>
					}
					@if (showLabels)
					{
						<th>Labels</th>
					}
					<th>Actions</th>
				</tr>
				</thead>
				<tbody>
				@foreach (var contact in Model)
				{
					<tr>
						
						@{ 
							DateTime parsedDate;
							string[] formats = { "MM/dd/yyyy", "dd/MM/yyyy", "yyyy-MM-dd", "M/d/yyyy" }; // Supported formats
							string formattedBirthday = "";

							if (!string.IsNullOrEmpty(contact.Birthday) && 
							    DateTime.TryParseExact(contact.Birthday, formats, null, System.Globalization.DateTimeStyles.None, out parsedDate))
							{
								formattedBirthday = parsedDate.ToString("MMMM dd, yyyy");
							}
							else
							{
								formattedBirthday = "N/A";
							}
						}

						@if (showFirstName && showLastName)
						{
							@if (@contact.FirstName == "" && @contact.LastName == "")
							{
								<td>N/A</td>
							}
							else
							{
								<td>@contact.FirstName @contact.LastName</td>
							}
						}
						else if (showFirstName)
						{
							<td>@contact.FirstName</td>
						}
						else if (showLastName)
						{
							<td>@contact.LastName</td>
						}

						@if (showEmail && emailIsAvailable)
						{
							<td>@contact.Email</td>
						}
						@if (showPhoneNumber)
						{
							if (@contact.PhoneNumber == "N/A")
							{
								<td>@contact.PhoneNumber</td>
							}
							else
							{
								<td >@contact.PhoneNumber</td>
							}
						}
						@if (showBirthday && birthdayIsAvailable)
						{
							<td>@formattedBirthday</td>
						}
						<td>
							@if (contact.Labels != null && contact.Labels.Count > 0)
							{
								@foreach (var label in contact.Labels)
								{
									<span class="badge badge-info">@label.ToUpperInvariant()</span>
								}
							}
							else
							{
								<span>N/A</span>
							}
						</td>

						<td class="action-buttons">
							<!-- Update button linking to the UpdateContact action -->
							<form asp-controller="People" asp-action="UpdateContact" method="get">
								<input type="hidden" name="resourceName" value="@contact.ResourceName"/>
								<button type="submit" class="btn btn-primary action-button" id="edit-btn">Edit</button>
							</form>
							<!-- Delete button linking to the DeleteContact action -->
							<form asp-controller="People" asp-action="DeleteContact" method="post">
								<input type="hidden" name="resourceName" value="@contact.ResourceName"/>
								<input type="hidden" id="returnUrl" name="returnUrl"/>
								<button type="submit" class="btn btn-danger action-button" id="delete-btn" onclick="submitDeleteForm(this)">Delete</button>
							</form>
							
							@if (contact.Email != null && contact.Email != "N/A" && contact.Email.Contains("@gmail.com"))
							{
								<!-- Add event button linking to the AddEvent action from the Calendar Controller -->
								<form asp-controller="People" asp-action="CreateEventForContact" method="post">
									<input type="hidden" name="contactEmail" value="@contact.Email" />
									<input type="hidden" name="calendarId" value="primary" />
									<input type="hidden" id="returnUrl" name="returnUrl" />
									<button type="submit" class="btn btn-success action-button" id="create-event-btn">Event</button>
								</form>
							}
						</td>
					</tr>
				}
				</tbody>
			</table>
		</div> 

		<!-- Pagination Controls -->
		<nav aria-label="Page navigation">
			<ul class="pagination justify-content-center">
				<!-- Back Button -->
				<li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
					<form method="post" asp-action="SearchContacts" style="display:inline;">
						<input type="hidden" name="text" value="@TempData["SearchTerm"]"/>
						<input type="hidden" name="pageNumber" value="@previousPage" />
						<button type="submit" class="page-link" @(ViewBag.CurrentPage == 1 ? "disabled" : "")>&laquo; Previous</button>
					</form>
				</li>

				@for (int i = startPage; i <= endPage; i++)
				{
					<li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
						<form method="post" asp-action="SearchContacts" style="display:inline;">
							<input type="hidden" name="text" value="@TempData["SearchTerm"]"/>
							<input type="hidden" name="pageNumber" value="@i" />
							<button type="submit" class="page-link">@i</button>
						</form>
					</li>
				}

				<!-- Next Button -->
				<li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
					<form method="post" asp-action="SearchContacts" style="display:inline;">
						<input type="hidden" name="text" value="@TempData["SearchTerm"]"/>
						<input type="hidden" name="pageNumber" value="@nextPage" />
						<button type="submit" class="page-link" @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")>Next &raquo;</button>
					</form>
				</li>
			</ul>
		</nav>



	}
</div>



@*  // FUNCTION TO HIDE THE SUCCESS / ERROR MESSAGE  *@


<script>

	document.addEventListener("DOMContentLoaded", function () {
		// Success Message
		var successMessage = document.getElementById('success-message');
		if (successMessage) {
			setTimeout(function () {
				successMessage.classList.add('fade-out');
			}, 1000);

			setTimeout(function () {
				successMessage.style.display = 'none';
			}, 3200);
		}

	});

	document.addEventListener("DOMContentLoaded", function () {
		var errorMessage = document.getElementById('error-message');
		if (errorMessage) {
			setTimeout(function () {
				errorMessage.classList.add('fade-out');
			}, 1000);

			setTimeout(function () {
				errorMessage.style.display = 'none';
			}, 4000);
		}
	});
</script>

 

