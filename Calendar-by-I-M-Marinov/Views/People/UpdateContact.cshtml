@model Calendar_by_I_M_Marinov.Models.People.ContactViewModel;

<h2>Update a contact</h2>

<div class="update-contact-div">
	<form asp-controller="People" asp-action="UpdateContact" method="post">
		<input type="hidden" name="ResourceName" value="@Model.ResourceName" />

		<div class="contact-firstname">
			<input type="text" id="firstName" name="FirstName" placeholder=" " value="@Model.FirstName" required/>
			<label for="firstName">First name</label>
		</div>

		<div class="contact-lastname">
			<input type="text" id="lastName" name="LastName" placeholder=" " value="@Model.LastName" required/>
			<label for="lastName">Last name</label>
		</div>

		<div class="contact-email">
			<input type="email" id="email" name="Email" placeholder=" " value="@Model.Email"/>
			<label for="email">Email</label>
		</div>

		<div class="contact-phoneNumber">
			<input type="tel" id="phoneNumber" name="PhoneNumber" placeholder=" " value="@Model.PhoneNumber"/>
			<label for="phoneNumber">Phone number</label>
		</div>

		<div class="contact-birthday">
			<label for="birthday">Birthday</label>
			<input type="date" id="birthday" name="Birthday" value="@(!string.IsNullOrEmpty(Model.Birthday) && DateTime.TryParse(Model.Birthday, out var date) ? date.ToString("yyyy-MM-dd") : "")" />
		</div>

		<div>
			<div><p>Labels</p></div>

			<div id="selectedLabelsContainer">
				@if (Model.Labels != null && Model.Labels.Count > 0)
				{
					foreach (var label in Model.Labels)
					{
						<input type="hidden" name="Labels" id="label-@label" value="@label" />
					}
				}
			</div>
			<ul id="groupsList">
				@foreach (var group in ViewBag.ContactGroups)
				{
					if (group.GroupType == "USER_CONTACT_GROUP")
					{
						<li class="group-item" data-value="@group.ResourceName">@group.FormattedName</li>
					}
				}
			</ul>

			<input type="hidden" name="Labels" id="hiddenLabelsInput" />
		</div>


		<div class="update-contact-button-container">
			<button type="submit" class="btn btn-primary action-button" id="update-contact-button">Update</button>

			<div>
				<a asp-action="GetAllContacts" id="back-button" class="btn btn-primary btn-sm">
					Back to Contact List
				</a>
			</div>
		</div>
	</form>
</div>

@{ 
	DateTime parsedDate = DateTime.Now; // default value 
	string[] formats = { "MM/dd/yyyy", "dd/MM/yyyy", "yyyy-MM-dd", "M/d/yyyy" }; // Supported formats
	string formattedBirthday = "";

	if (!string.IsNullOrEmpty(ViewBag.NewContactBirthday) &&
	    DateTime.TryParseExact(ViewBag.NewContactBirthday, formats, null, System.Globalization.DateTimeStyles.None, out parsedDate)) // reset the value when parsing 
	{
		formattedBirthday = parsedDate.ToString("MMMM dd, yyyy"); // format the value
	}
	else
	{
		formattedBirthday = "N/A";
	}
}

@if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
{
	<div class="alert alert-success update-contact" style="display: flex; flex-direction: column;" role="alert">
		<strong>Contact updated!</strong>
        <br /><br />
		<p>Name: @ViewBag.NewContactFirstName @ViewBag.NewContactLastName</p>
		<p>Email: @ViewBag.NewContactEmail</p>
		<p>Phone Number: @ViewBag.NewContactPhoneNumber</p>
		<p>Birthday: @formattedBirthday </p>
        @if (ViewBag.NewContactLabels != null && ((List<string>)ViewBag.NewContactLabels).Count > 0)
        {
            <p>
                Labels:
                @foreach (var label in ViewBag.NewContactLabels as List<string>)
                {
                    <span class="badge badge-info">@label</span>
                }
            </p>
        }
        else
        {
            <p>No labels added.</p>
        }

	</div>
}


